name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - "main"
    types:
      - "closed"

jobs:
  Prod-Deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "junbeomAn"
          git config user.email "wnsqja8744@github.com"

      - name: Create deployment branch
        run: |
          export TZ=Asia/Seoul
          DATE=$(date +'%Y%m%d-%H%M%S')
          DEPLOY_BRANCH="deploy-${DATE}"
          git checkout -b $DEPLOY_BRANCH
          git push origin $DEPLOY_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Notify Success (성공)
        if: success()
        run: |
          DEPLOYER="${{ github.event.sender.login }}"
          PR_TITLE='${{ github.event.pull_request.title }}'
          ESCAPED_TITLE=$(echo "$PR_TITLE" | sed 's/"/\\\"/g')
          PR_URL="${{ github.event.pull_request.html_url }}"

          cat <<EOF > discord-payload.json
          {
            "embeds": [
              {
                "title": "✅ **배포 완료!**",
                "description": "**제목:** ${ESCAPED_TITLE}",
                "url": "${PR_URL}",
                "fields": [
                  {
                    "name": "배포자",
                    "value": "${DEPLOYER}",
                    "inline": true
                  }
                ]
              }
            ]
          }
          EOF

          curl -i -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -X POST -d @discord-payload.json \
            ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify Discord (실패)
        if: failure()
        run: |
          RUN_ID="${{ github.run_id }}"
          REPO="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          JOB_URL="https://github.com/${REPO}/actions/runs/${RUN_ID}"

          cat <<EOF > discord-payload.json
          {
            "embeds": [{
              "title": "❌ 배포 실패!",
              "description": "**배포자:** ${ACTOR}",
              "url": "${JOB_URL}",
              "color": 15158332
            }]
          }
          EOF

          curl -i -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -X POST -d @discord-payload.json \
            ${{ secrets.DISCORD_WEBHOOK }}
